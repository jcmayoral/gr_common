#!/usr/bin/env python

PACKAGE = "gr_safe_gridmap"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("enabler", bool_t, 2 , "enable/disable", True)
gen.add("sensors_ids",    str_t,    0, "Sensor ID",  "Unknown")

size_enum = gen.enum([ gen.const("Reconfigure",      int_t, 0, "A small constant"),
                       gen.const("Add",     int_t, 1, "A medium constant"),
                       ], "An enum to set size")

gen.add("mode", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)
gen.add("selection",    str_t,    0, "Sensor ID",  "Select")
gen.add("tracking", int_t, 0, "A size parameter which is edited via an enum", 5, 0,10)
gen.add("nprimitives", int_t, 0, "A size parameter which is edited via an enum", 3, 0,9)
gen.add("timestep", double_t, 0, "A size parameter which is edited via an enum", 0.5, 0,3)
gen.add("primitive_0", double_t, 0, "A size parameter which is edited via an enum", 0.33, 0,1)
gen.add("primitive_1", double_t, 0, "A size parameter which is edited via an enum", 0.33, 0,1)
gen.add("primitive_2", double_t, 0, "A size parameter which is edited via an enum", 0.33, 0,1)
gen.add("primitive_3", double_t, 0, "A size parameter which is edited via an enum", 0.0, 0,1)
gen.add("primitive_4", double_t, 0, "A size parameter which is edited via an enum", 0.0, 0,1)
gen.add("primitive_5", double_t, 0, "A size parameter which is edited via an enum", 0.0, 0,1)
gen.add("primitive_6", double_t, 0, "A size parameter which is edited via an enum", 0.0, 0,1)
gen.add("primitive_7", double_t, 0, "A size parameter which is edited via an enum", 0.0, 0,1)
gen.add("primitive_8", double_t, 0, "A size parameter which is edited via an enum", 0.0, 0,1)


exit(gen.generate(PACKAGE, PACKAGE, "SafeGridMap"))
